# .goreleaser.yml
project_name: igscraper

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: igscraper
    main: ./cmd/igscraper
    binary: igscraper
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
      - freebsd
    goarch:
      - amd64
      - arm64
      - arm
      - 386
    goarm:
      - 6
      - 7
    ignore:
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: arm
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
      - goos: freebsd
        goarch: arm
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser

archives:
  - id: default
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE*
      - README*
      - CHANGELOG*

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
      - 'typo'
      - 'README'
  groups:
    - title: 'Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: 'Performance'
      regexp: "^.*perf[(\\w)]*:+.*$"
      order: 2
    - title: 'Refactors'
      regexp: "^.*refactor[(\\w)]*:+.*$"
      order: 3
    - title: Others
      order: 999

dockers:
  - goos: linux
    goarch: amd64
    ids:
      - igscraper
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Tag }}"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:v{{ .Major }}"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:v{{ .Major }}.{{ .Minor }}"
    skip_push: false
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64,linux/arm64,linux/arm/v7"

nfpms:
  - id: packages
    package_name: igscraper
    vendor: igscraper
    homepage: https://github.com/{{ .Env.GITHUB_REPOSITORY }}
    maintainer: Maintainer <maintainer@example.com>
    description: Instagram photo scraper
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    dependencies:
      - ca-certificates
    bindir: /usr/bin
    section: utils
    priority: optional

brews:
  - name: igscraper
    tap:
      owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    url_template: "https://github.com/{{ .Env.GITHUB_REPOSITORY }}/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    download_strategy: CurlDownloadStrategy
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    folder: Formula
    homepage: "https://github.com/{{ .Env.GITHUB_REPOSITORY }}"
    description: "Instagram photo scraper"
    license: "MIT"
    test: |
      system "#{bin}/igscraper", "--version"
    install: |
      bin.install "igscraper"

scoops:
  - bucket:
      owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
      name: scoop-bucket
      token: "{{ .Env.SCOOP_BUCKET_GITHUB_TOKEN }}"
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://github.com/{{ .Env.GITHUB_REPOSITORY }}"
    description: "Instagram photo scraper"
    license: MIT

announce:
  discord:
    enabled: true
    message_template: 'New release: {{ .ProjectName }} {{ .Tag }} is out!'

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: "{{ .Env.GITHUB_REPOSITORY_NAME }}"
  draft: false
  prerelease: auto
  name_template: "{{.ProjectName}}-v{{.Version}}"
  header: |
    ## What's Changed
    
    **Full Changelog**: https://github.com/{{ .Env.GITHUB_REPOSITORY }}/compare/{{ .PreviousTag }}...{{ .Tag }}